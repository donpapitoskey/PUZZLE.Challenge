{"version":3,"sources":["components/modal/Backdrop.js","services/apollo.js","redux/Actions.js","redux/ActionsType.js","components/filter/Filter.js","components/search/Search.js","components/auxcard/Auxcard.js","components/modal/Modal.js","components/card/Card.js","components/lister/Lister.js","components/paginator/Paginator.js","components/home/Home.js","App.js","serviceWorker.js","redux/searchReducer.js","redux/store.js","index.js","components/modal/modal.module.css","components/home/home.module.css","components/search/search.module.css","components/lister/lister.module.css","components/filter/filter.module.css","components/modal/backdrop.module.css","components/card/card.module.css","components/auxcard/auxcard.module.css","components/paginator/paginator.module.css"],"names":["Backdrop","props","show","className","classes","onClick","clicked","client","ApolloClient","uri","updateTypeAction","updatedType","dispatch","getState","type","payload","updateNameAction","updatedName","cleanErrorAction","setPageAction","pageNum","getSearchAction","search","typeOfSearch","searchingPage","searchName","searchType","searchCriteria","requestProps","query","gql","variables","then","data","episodes","searchParams","name","locations","characters","catch","err","Filter","handleOptionChange","changeEvent","searchParamsLocations","searchParamsEpisodes","searchParamsCharacters","setFilterAction","modalClosed","value","target","this","filterOption","small","styles","containerSmall","container","style","transform","opacity","checked","onChange","Component","connect","store","newFilter","Search","nameFieldChanged","event","setState","nameInput","typeFieldChanged","typeInput","handleSearchClicked","length","enterPressed","keyCode","eraseName","eraseNameFieldAction","lenght","eraseType","eraseTypeFieldAction","state","prevProps","prevState","snapshot","smallScreen","TextField","fullWidth","InputProps","endAdornment","InputAdornment","position","cursor","label","onKeyDown","cancel","display","Auxcard","modalToggle","modalHandler","e","preventDefault","Modal","dimension","created","gender","species","episode","image","residents","chars","content","aux_container","slice","map","element","src","Card","height","Lister","fetching","retrievedArray","searchWords","listerContainer","textAlign","containerError","arrChars","arrLoc","arrEp","error","Paginator","handleChange","infoChars","infoLoc","infoEp","page","info","Pagination","count","pages","shape","siblingCount","boundaryCount","variant","Home","modalFilterHandler","modalFilter","currDate","date","Date","toLocaleDateString","handleClick","windowWidth","updateDimensions","bind","window","addEventListener","removeEventListener","innerWidth","isSmallScreen","width","searcher","fontSize","side_filterClosed","side_filter","mainBlock","signature","App","Boolean","location","hostname","match","initialData","rootReducer","combineReducers","action","results","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","WithStore","WithApollo","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.7ba3e757.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './backdrop.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked} ></div> : null\r\n)\r\n\r\nBackdrop.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    clicked: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Backdrop","import ApolloClient from 'apollo-boost';\r\n\r\nlet client = new ApolloClient({ \r\n    uri: \"https://rickandmortyapi.com/graphql\"\r\n});\r\n\r\nexport default client;","import client from '../services/apollo';\r\nimport {\r\n    REQUEST, REQUEST_CHARACTERS_SUCCESS,\r\n    REQUEST_EPISODES_SUCCESS,\r\n    REQUEST_ERROR, FILTER_CHANGED,\r\n    REQUEST_LOCATIONS_SUCCESS,\r\n    PAGE_CHANGED, CLEAN_ERROR,\r\n    UPDATE_NAME_BOX, ERASE_NAME_FIELD,\r\n    UPDATE_TYPE_BOX, ERASE_TYPE_FIELD\r\n} from './ActionsType';\r\n\r\nimport { gql } from 'apollo-boost';\r\n\r\n\r\n\r\nexport let eraseNameFieldAction = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: ERASE_NAME_FIELD,\r\n        payload: ''\r\n    })\r\n}\r\n\r\nexport let eraseTypeFieldAction = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: ERASE_TYPE_FIELD,\r\n        payload: ''\r\n    })\r\n}\r\n\r\nexport let updateTypeAction = (updatedType) => (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: UPDATE_TYPE_BOX,\r\n        payload: updatedType\r\n    })\r\n}\r\n\r\nexport let updateNameAction = (updatedName) => (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: UPDATE_NAME_BOX,\r\n        payload: updatedName\r\n    })\r\n}\r\n\r\nexport let cleanErrorAction = () => (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CLEAN_ERROR,\r\n        payload: []\r\n    })\r\n}\r\n\r\nexport let setPageAction = (pageNum) => (dispatch, getState) => {\r\n\r\n\r\n    dispatch({\r\n        type: PAGE_CHANGED,\r\n        payload: pageNum\r\n    })\r\n\r\n\r\n}\r\n\r\nexport let setFilterAction = (newFilter) => (dispatch, getState) => {\r\n\r\n\r\n    dispatch({\r\n        type: FILTER_CHANGED,\r\n        payload: newFilter\r\n    })\r\n\r\n\r\n}\r\n\r\nexport function getSearchAction() {\r\n    return (dispatch, getState) => {\r\n\r\n\r\n        let { typeOfSearch, searchingPage, searchName, searchType } = getState().search;\r\n        let searchCriteria = '';\r\n        let requestProps = ``\r\n        switch (typeOfSearch) {\r\n            case \"episodes\":\r\n                searchCriteria = `name: \"${searchName}\"`\r\n                requestProps =\r\n                    `\r\n                        name\r\n                        created\r\n                        episode\r\n                        characters{\r\n                            name\r\n                        }\r\n              \r\n                    `\r\n                break\r\n            case \"locations\":\r\n                searchCriteria = `name: \"${searchName}\" type: \"${searchType}\"`\r\n                requestProps =\r\n                    `\r\n                        name\r\n                        type\r\n                        dimension\r\n                        residents{\r\n                            name\r\n                        }\r\n              \r\n                    `\r\n                break;\r\n            case \"characters\":\r\n                searchCriteria = `name: \"${searchName}\" type: \"${searchType}\"`\r\n                requestProps =\r\n                    `\r\n                        name\r\n                        gender\r\n                        species\r\n                        type\r\n                        image\r\n              \r\n                    `\r\n                break;\r\n            default:\r\n                searchCriteria = `name: \"${searchName}\" type: \"${searchType}\"`\r\n                requestProps =\r\n                    `\r\n                        name\r\n                        gender\r\n                        species\r\n                        type\r\n                        image\r\n              \r\n                    `\r\n                break;\r\n        }\r\n        let query = gql`\r\n        query {\r\n            ${typeOfSearch}(filter:{${searchCriteria}} page:${searchingPage}){\r\n            info {\r\n              count\r\n              pages\r\n              next\r\n            }\r\n            results{\r\n              ${requestProps}\r\n            }\r\n          }\r\n        }\r\n        `\r\n        dispatch({\r\n            type: REQUEST,\r\n            variables: {}\r\n        });\r\n\r\n        return client.query({\r\n            query\r\n        })\r\n            .then(({ data }) => {\r\n\r\n                switch (typeOfSearch) {\r\n                    case \"episodes\":\r\n                        dispatch({\r\n                            type: REQUEST_EPISODES_SUCCESS,\r\n                            payload: data.episodes,\r\n                            searchParams: {\r\n                                name: searchName\r\n                            }\r\n                        })\r\n                        break\r\n                    case \"locations\":\r\n                        dispatch({\r\n                            type: REQUEST_LOCATIONS_SUCCESS,\r\n                            payload: data.locations,\r\n                            searchParams: {\r\n                                name: searchName,\r\n                                type: searchType\r\n                            }\r\n                        })\r\n                        break;\r\n                    case \"characters\":\r\n                        dispatch({\r\n                            type: REQUEST_CHARACTERS_SUCCESS,\r\n                            payload: data.characters,\r\n                            searchParams: {\r\n                                name: searchName,\r\n                                type: searchType\r\n                            }\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: REQUEST_ERROR,\r\n                    payload: err\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\n","\r\nexport const REQUEST = \"REQUEST\";\r\nexport const REQUEST_EPISODES_SUCCESS = \"REQUEST_EPISODES_SUCCESS\";\r\nexport const REQUEST_LOCATIONS_SUCCESS = \"REQUEST_LOCATIONS_SUCCESS\";\r\nexport const REQUEST_CHARACTERS_SUCCESS = \"REQUEST_CHARACTERS_SUCCESS\";\r\nexport const REQUEST_ERROR = \"REQUEST_ERROR\";\r\n\r\nexport const FILTER_CHANGED = \"FILTER_CHANGED\";\r\nexport const PAGE_CHANGED = \"PAGE_CHANGED\";\r\n\r\nexport const CLEAN_ERROR = \"CLEAN_ERROR\";\r\n\r\nexport const UPDATE_NAME_BOX = \"UPDATE_NAME_BOX\";\r\nexport const ERASE_NAME_FIELD = \"ERASE_NAME_FIELD\";\r\n\r\nexport const UPDATE_TYPE_BOX = \"UPDATE_TYPE_BOX\";\r\nexport const ERASE_TYPE_FIELD = \"ERASE_TYPE_FIELD\";\r\n","import React, { Component } from 'react'\r\nimport styles from './filter.module.css'\r\nimport Backdrop from '../modal/Backdrop';\r\nimport { connect } from 'react-redux';\r\nimport { setFilterAction, updateNameAction, updateTypeAction, getSearchAction, cleanErrorAction } from '../../redux/Actions';\r\n\r\nclass Filter extends Component {\r\nlejania\r\n\r\n    handleOptionChange = changeEvent => {\r\n        let { searchParamsLocations, searchParamsEpisodes, searchParamsCharacters, updateTypeAction, updateNameAction, setFilterAction, modalClosed, cleanErrorAction } = this.props;\r\n        let value = changeEvent.target.value;\r\n        cleanErrorAction();\r\n        setFilterAction(changeEvent.target.value);\r\n        switch (value) {\r\n            case \"locations\":\r\n                updateNameAction(searchParamsLocations.name);\r\n                updateTypeAction(searchParamsLocations.type);\r\n                break;\r\n            case \"characters\":\r\n                updateNameAction(searchParamsCharacters.name);\r\n                updateTypeAction(searchParamsCharacters.type);\r\n                break;\r\n            case \"episodes\":\r\n                updateNameAction(searchParamsEpisodes.name);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        modalClosed();\r\n    };\r\n\r\n    render() {\r\n        let { filterOption, small, show, modalClosed } = this.props\r\n        return (\r\n            <div>\r\n                <div className={small ? styles.containerSmall : styles.container}\r\n                    style={{\r\n                        transform: show ? 'translateX(0)' :\r\n                            'translateX(-100vh)',\r\n                        opacity: show ? 1 : 0\r\n                    }}\r\n                >\r\n                    <h3>Filters</h3>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"filter\"\r\n                            className=\"form-check-input\"\r\n                            value=\"characters\"\r\n                            checked={filterOption === \"characters\"}\r\n                            onChange={this.handleOptionChange} /> Characters\r\n                </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"filter\"\r\n                            className=\"form-check-input\"\r\n                            value=\"locations\"\r\n                            checked={filterOption === 'locations'}\r\n                            onChange={this.handleOptionChange} /> Locations\r\n                </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"filter\"\r\n                            value=\"episodes\"\r\n                            className=\"form-check-input\"\r\n                            checked={filterOption === 'episodes'}\r\n                            onChange={this.handleOptionChange} /> Episodes\r\n                </label>\r\n                </div>\r\n                <Backdrop show={show && small} clicked={modalClosed} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n    return {\r\n        filterOption: store.search.typeOfSearch,\r\n        searchParamsLocations: store.search.searchParamsLocations,\r\n        searchParamsEpisodes: store.search.searchParamsEpisodes,\r\n        searchParamsCharacters: store.search.searchParamsCharacters\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { updateNameAction, updateTypeAction, setFilterAction, getSearchAction, cleanErrorAction })(Filter);","import React, { Component, useEffect } from 'react';\r\nimport styles from './search.module.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    getSearchAction, updateNameAction, updateTypeAction,\r\n    cleanErrorAction, eraseNameFieldAction, eraseTypeFieldAction, setPageAction\r\n} from '../../redux/Actions'\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nameInput: props.name,\r\n            typeInput: props.type\r\n        }\r\n    }\r\n\r\n    nameFieldChanged = (event) => {\r\n        this.setState({\r\n            nameInput: event.target.value\r\n        })\r\n        this.props.updateNameAction(event.target.value);\r\n    }\r\n\r\n    typeFieldChanged = (event) => {\r\n        this.setState({\r\n            typeInput: event.target.value\r\n        })\r\n        this.props.updateTypeAction(event.target.value)\r\n    }\r\n\r\n    handleSearchClicked = () => {\r\n        const { cleanErrorAction, setPageAction, getSearchAction, name, type } = this.props\r\n        if (name.length > 2 || type.length > 2) {\r\n            cleanErrorAction();\r\n            setPageAction(1);\r\n            getSearchAction();\r\n        }\r\n    }\r\n\r\n    enterPressed = (event) => {\r\n        const { cleanErrorAction, setPageAction, getSearchAction, name, type } = this.props\r\n        if (event.keyCode === 13 && (name.length > 2 || type.length > 2)) {\r\n            cleanErrorAction();\r\n            setPageAction(1);\r\n            getSearchAction();\r\n        }\r\n    }\r\n\r\n    eraseName = () => {\r\n        const { type, eraseNameFieldAction, getSearchAction, cleanErrorAction } = this.props;\r\n        this.setState({\r\n            nameInput: ''\r\n        })\r\n        eraseNameFieldAction();\r\n        if (type.lenght > 2) {\r\n            getSearchAction();\r\n        }\r\n        else {\r\n            cleanErrorAction();\r\n        }\r\n    }\r\n\r\n    eraseType = () => {\r\n        const { name, eraseTypeFieldAction, getSearchAction, cleanErrorAction } = this.props;\r\n        this.setState({\r\n            typeInput: ''\r\n        })\r\n        eraseTypeFieldAction();\r\n        if (name.length > 2) {\r\n            getSearchAction();\r\n        }\r\n        else {\r\n            cleanErrorAction();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let { filterOption, searchParamsLocations, searchParamsEpisodes, searchParamsCharacters } = this.props;\r\n        if (prevProps.filterOption !== filterOption) {\r\n            switch (filterOption) {\r\n                case \"locations\":\r\n                    this.setState({\r\n                        typeInput: searchParamsLocations.type,\r\n                        nameInput: searchParamsLocations.name\r\n                    })\r\n                    break;\r\n                case \"characters\":\r\n                    this.setState({\r\n                        typeInput: searchParamsCharacters.type,\r\n                        nameInput: searchParamsCharacters.name\r\n                    })\r\n                    break;\r\n                case \"episodes\":\r\n                    this.setState({\r\n                        nameInput: searchParamsEpisodes.name\r\n                    })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let { smallScreen, name, type, filterOption } = this.props;\r\n        let { nameInput, typeInput } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={styles.container} style={{\r\n                \"flex-flow\": smallScreen ? \"column\" : null,\r\n                \"padding-left\": smallScreen ? \"0\" : null\r\n            }}>\r\n                <div className={styles.container}>\r\n                    <TextField\r\n                        fullWidth\r\n                        value={nameInput}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <div style={{ cursor: 'pointer' }} onClick={smallScreen ? this.handleSearchClicked : null}><SearchIcon /></div>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                        label=\"Name...\"\r\n                        onChange={this.nameFieldChanged}\r\n                        onKeyDown={this.enterPressed}\r\n                    />\r\n                    <div className={styles.cancel} style={name ? null : { display: \"none\" }} onClick={this.eraseName}>\r\n                        <CancelIcon />\r\n                    </div>\r\n                </div>\r\n                {filterOption === \"episodes\" ? null : <div className={styles.container}>\r\n                    <TextField\r\n                        fullWidth\r\n                        value={typeInput}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <div onClick={smallScreen ? this.handleSearchClicked : null}><SearchIcon /></div>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                        label=\"Type...\"\r\n                        onChange={this.typeFieldChanged}\r\n                        onKeyDown={this.enterPressed}\r\n                    />\r\n                    <div className={styles.cancel} style={type ? null : { display: \"none\" }} onClick={this.eraseType}>\r\n                        <CancelIcon />\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(store) {\r\n    return {\r\n        name: store.search.searchName,\r\n        type: store.search.searchType,\r\n        filterOption: store.search.typeOfSearch,\r\n        searchParamsLocations: store.search.searchParamsLocations,\r\n        searchParamsEpisodes: store.search.searchParamsEpisodes,\r\n        searchParamsCharacters: store.search.searchParamsCharacters\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getSearchAction, updateNameAction, updateTypeAction, cleanErrorAction, eraseNameFieldAction\r\n    , eraseTypeFieldAction, setPageAction\r\n})(Search)","import React, { Component } from 'react'\r\nimport styles from './auxcard.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class Auxcard extends Component {\r\n\r\n    state = {\r\n        modalToggle: false\r\n    }\r\n\r\n    modalHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            modalToggle: !this.state.modalToggle\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let { name } = this.props\r\n        return (\r\n            <div className={styles.container} onClick={this.modalHandler}>\r\n                <h3>{name ? name : \"None\"}</h3>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nAuxcard.propTypes = {\r\n    name: PropTypes.string.isRequired\r\n}","import React, { Component } from \"react\";\r\nimport classes from \"./modal.module.css\";\r\nimport Backdrop from './Backdrop';\r\nimport Auxcard from '../auxcard/Auxcard';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Modal extends Component {\r\n\r\n  render() {\r\n\r\n\r\n    let { dimension, created, gender, species, episode, name, type, image, typeOfSearch, residents, show, modalClosed, chars } = this.props;\r\n\r\n    if (typeOfSearch === \"locations\") {\r\n\r\n      return (\r\n\r\n        <div className={classes.Modal}\r\n          style={{\r\n            transform: show ? 'translateY(0)' :\r\n              'translateY(-100vh)',\r\n            opacity: show ? 1 : 0\r\n          }}>\r\n          <div className={classes.content} >\r\n            <h2>{name}</h2>\r\n            {type ? <h3>Type: {type}</h3> : null}\r\n            <h3>Dimension: {dimension}</h3>\r\n            <h3>Residents:</h3>\r\n            <div className={classes.aux_container}>\r\n              {residents.slice(0, 5).map(element => (\r\n                <Auxcard name={element.name} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <Backdrop show={show} clicked={modalClosed} />\r\n        </div>\r\n\r\n      );\r\n    }\r\n    else if (typeOfSearch === \"episodes\") {\r\n      return (\r\n\r\n        <div className={classes.Modal}\r\n          style={{\r\n            transform: show ? 'translateY(0)' :\r\n              'translateY(-100vh)',\r\n            opacity: show ? 1 : 0\r\n          }}>\r\n          <div className={classes.content} >\r\n            <h2>{name}</h2>\r\n            <h3> Creation date: {created}</h3>\r\n            <h3>{episode}</h3>\r\n            <div> Characters</div>\r\n            <div className={classes.aux_container}>\r\n              {chars.slice(0, 5).map(element => (\r\n                <Auxcard name={element.name} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <Backdrop show={show} clicked={modalClosed} />\r\n        </div>\r\n      );\r\n    } else {\r\n\r\n      return (\r\n\r\n        <div className={classes.Modal}\r\n          style={{\r\n            transform: show ? 'translateY(0)' :\r\n              'translateY(-100vh)',\r\n            opacity: show ? 1 : 0\r\n          }}>\r\n          <div className={classes.content} >\r\n            <img src={image ? image : null} />\r\n            <h2> {name}</h2>\r\n            {type ? <h3> Type: {type}</h3> : null}\r\n            <h3>Genre: {gender}</h3>\r\n            <p> Specie: {species} </p>\r\n\r\n          </div>\r\n\r\n          <Backdrop show={show} clicked={modalClosed} />\r\n        </div>\r\n\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  modalClosed: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  dimension: PropTypes.string,\r\n  image: PropTypes.string,\r\n  episode: PropTypes.string,\r\n  created: PropTypes.string,\r\n  gender: PropTypes.string,\r\n  species: PropTypes.string,\r\n  chars: PropTypes.arrayOf(PropTypes.string),\r\n  residents: PropTypes.arrayOf(PropTypes.string)\r\n}\r\n\r\nfunction mapStateToProps(store) {\r\n  return {\r\n    typeOfSearch: store.search.typeOfSearch\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Modal);","import React, { Component } from 'react'\r\nimport styles from './card.module.css'\r\nimport Modal from '../modal/Modal'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default class Card extends Component {\r\n\r\n    state = {\r\n        modalToggle: false\r\n    }\r\n\r\n    modalHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            modalToggle: !this.state.modalToggle\r\n        })\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        let { modalToggle } = this.state;\r\n        let { name, created, type, episode, dimension, image, value } = this.props;\r\n        return (\r\n            <div>\r\n                <div className={styles.container} onClick={this.modalHandler}>\r\n\r\n                    <label>\r\n                        <h3> {name ? name : null} </h3>\r\n                        <p>{created ? created : null}</p>\r\n                        <h4>{type && !image ? this.props.type : null}</h4>\r\n                        <p>{episode ? episode : null}</p>\r\n                        <p>{dimension ? dimension : null}</p>\r\n                    </label>\r\n                    <img src={image ? image : null} height={image ? \"200px\" : null} />\r\n                </div>\r\n                <Modal show={modalToggle}\r\n                    modalClosed={this.modalHandler}\r\n                    name={name}\r\n                    image={image}\r\n                    type={type}\r\n                    episode={episode}\r\n                    dimension={dimension}\r\n                    created={created}\r\n                    gender={value.gender}\r\n                    species={value.species}\r\n                    chars={value.characters ? value.characters : null}\r\n                    residents={value.residents ? value.residents : null} />\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nCard.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    created: PropTypes.string,\r\n    episode: PropTypes.string,\r\n    type: PropTypes.string,\r\n    dimension: PropTypes.string,\r\n    image: PropTypes.string,\r\n    value: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        type: PropTypes.string,\r\n        dimension: PropTypes.string,\r\n        image: PropTypes.string,\r\n        gender: PropTypes.string,\r\n        species: PropTypes.string,\r\n        episode: PropTypes.string,\r\n        created: PropTypes.string,\r\n        residents: PropTypes.arrayOf(PropTypes.string),\r\n        characters: PropTypes.arrayOf(PropTypes.string)\r\n    })\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport styles from './lister.module.css'\r\nimport Card from '../card/Card';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Lister extends Component {\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let { searchParamsLocations, searchParamsEpisodes, searchParamsCharacters, fetching, err, characters, filterOption, locations, episodes } = this.props;\r\n        let retrievedArray = [];\r\n        let searchWords = {};\r\n        switch (filterOption) {\r\n            case \"locations\":\r\n                retrievedArray = locations;\r\n                searchWords = searchParamsLocations;\r\n                break;\r\n            case \"episodes\":\r\n                retrievedArray = episodes;\r\n                searchWords = searchParamsEpisodes;\r\n                break;\r\n            case \"characters\":\r\n                retrievedArray = characters;\r\n                searchWords = searchParamsCharacters;\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n        if (fetching) {\r\n            return (\r\n                <div className={styles.container}>\r\n                    <h2>Loading ...</h2>\r\n                </div>\r\n            )\r\n        }\r\n        if (retrievedArray && err === \"clean\") {\r\n\r\n            return (\r\n                <div className={styles.listerContainer}>\r\n                    {searchWords.name && !searchWords.type ? <h3 style={{textAlign:\"center\"}}>Results for search: Name = \"{searchWords.name}\"</h3> : null}\r\n                    {searchWords.type && !searchWords.name ? <h3 style={{textAlign:\"center\"}}>Results for search: Type = \"{searchWords.type}\"</h3> : null}\r\n                    {searchWords.name && searchWords.type ? <h3 style={{textAlign:\"center\"}}>Results for search: Name = \"{searchWords.name}\" and Type = \"{searchWords.type}\"</h3> : null}\r\n                    <div className={styles.container} >\r\n\r\n                        {retrievedArray.map(element => (\r\n                            <Card\r\n                                value={element}\r\n                                name={element.name}\r\n                                episode={element.episode}\r\n                                created={element.created}\r\n                                type={element.type}\r\n                                dimension={element.dimension}\r\n                                image={element.image}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        if (err !== \"clean\") {\r\n            return (\r\n                <div className={styles.containerError}>\r\n                    <h2>Sorry Morty. Your search could not be achieved :(</h2>\r\n                    <h3>Give it another try with new values :D</h3>\r\n                </div>)\r\n        }\r\n\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(store) {\r\n    return {\r\n        filterOption: store.search.typeOfSearch,\r\n        characters: store.search.arrChars,\r\n        locations: store.search.arrLoc,\r\n        episodes: store.search.arrEp,\r\n        fetching: store.search.fetching,\r\n        err: store.search.error,\r\n        searchParamsLocations: store.search.searchParamsLocations,\r\n        searchParamsEpisodes: store.search.searchParamsEpisodes,\r\n        searchParamsCharacters: store.search.searchParamsCharacters\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Lister)\r\n\r\n\r\n","\r\nimport React, { Component } from 'react'\r\nimport styles from './paginator.module.css'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { connect } from 'react-redux'\r\nimport { setPageAction, getSearchAction } from '../../redux/Actions';\r\n\r\nclass Paginator extends Component {\r\n\r\n\r\n    handleChange = (props, value) => {\r\n        let {setPageAction, getSearchAction} = this.props;\r\n        setPageAction(value);\r\n        getSearchAction();\r\n    }\r\n\r\n    render() {\r\n        let { infoChars, infoLoc, infoEp, page, filterOption } = this.props;\r\n        let info = {};\r\n        switch (filterOption) {\r\n            case \"locations\":\r\n                info = infoLoc;\r\n                break;\r\n            case \"episodes\":\r\n                info = infoEp;\r\n                break;\r\n            case \"characters\":\r\n                info = infoChars;\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n        return (\r\n            <div className={styles.container}>\r\n                <Pagination\r\n                    count={info.pages ? info.pages : 1}\r\n\r\n                    shape={'round'}\r\n                    siblingCount={2}\r\n                    boundaryCount={1}\r\n                    page={page}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nfunction mapStateToProps(store) {\r\n    return {\r\n        infoChars: store.search.infoChars,\r\n        infoLoc: store.search.infoLoc,\r\n        infoEp: store.search.infoEp,\r\n        page: store.search.searchingPage,\r\n        filterOption: store.search.typeOfSearch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setPageAction, getSearchAction })(Paginator)","import React, { Component } from 'react';\r\nimport styles from './home.module.css';\r\nimport Filter from '../filter/Filter';\r\nimport Search from '../search/Search';\r\nimport Lister from '../lister/Lister';\r\nimport Paginator from '../paginator/Paginator';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            windowWidth: 0,\r\n            modalFilter: false\r\n        };\r\n        this.updateDimensions = this.updateDimensions.bind(this);\r\n    }\r\n\r\n    modalFilterHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            modalFilter: !this.state.modalFilter\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateDimensions();\r\n        window.addEventListener(\"resize\", this.updateDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateDimensions);\r\n    }\r\n\r\n    updateDimensions() {\r\n        const windowWidth = window !== \"undefined\" ? window.innerWidth : 0;\r\n        \r\n\r\n        this.setState({ windowWidth });\r\n    }\r\n\r\n    currDate = {\r\n        date: new Date().toLocaleDateString()\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            modalFilter: !this.state.modalFilter\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { windowWidth, modalFilter } = this.state;\r\n\r\n        const isSmallScreen = windowWidth < 768;\r\n\r\n        return (\r\n\r\n            <div style={{ height: \"100vh\", width: \"100vw\" }}>\r\n\r\n                <div className={styles.searcher} style={{ height: isSmallScreen ? \"20%\" : null }}>\r\n                    <div style={{ opacity: isSmallScreen ? 1 : 0 }}>\r\n                        <ListIcon fontSize=\"large\"\r\n\r\n                            onClick={this.handleClick} />\r\n                    </div>\r\n                    <Search smallScreen={isSmallScreen} />\r\n\r\n                </div>\r\n                <div className={styles.container} >\r\n\r\n                    <div className={isSmallScreen ? styles.side_filterClosed : styles.side_filter} >\r\n\r\n                        <Filter modalClosed={this.handleClick} show={isSmallScreen ? modalFilter : true} small={isSmallScreen} />\r\n\r\n\r\n                    </div>\r\n                    <div className={styles.mainBlock} style={{ width: isSmallScreen ? \"100%\" : null }}>\r\n                        <Lister />\r\n                        <Paginator />\r\n                    </div>\r\n                </div>\r\n                <div className={styles.signature} >\r\n                    <h3 > Juan J. Alarcon</h3>\r\n                    <h3> {this.currDate.date}</h3>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Home from './components/home/Home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    REQUEST, REQUEST_CHARACTERS_SUCCESS,\r\n    REQUEST_EPISODES_SUCCESS,\r\n    REQUEST_ERROR, FILTER_CHANGED,\r\n    REQUEST_LOCATIONS_SUCCESS,\r\n    PAGE_CHANGED, CLEAN_ERROR,\r\n    UPDATE_NAME_BOX, ERASE_NAME_FIELD,\r\n    UPDATE_TYPE_BOX, ERASE_TYPE_FIELD\r\n} from './ActionsType';\r\n\r\n\r\n\r\nlet initialData = {\r\n    fetching: false,\r\n    arrChars: [],\r\n    arrLoc: [],\r\n    arrEp: [],\r\n    infoChars: {},\r\n    infoLoc: {},\r\n    infoEp: {},\r\n    typeOfSearch: 'characters',\r\n    searchingPage: 1,\r\n    searchName: '',\r\n    searchType: \"\",\r\n    error: \"clean\",\r\n    searchParamsCharacters: {\r\n        name: '',\r\n        type: ''\r\n    },\r\n    searchParamsLocations: {\r\n        name: '',\r\n        type: ''\r\n    },\r\n    searchParamsEpisodes: {\r\n        name: ''\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default function reducer(state = initialData, action) {\r\n    switch (action.type) {\r\n        case CLEAN_ERROR:\r\n            return { ...state, error: \"clean\" }\r\n        case REQUEST:\r\n            return { ...state, fetching: true }\r\n        case REQUEST_ERROR:\r\n            return { ...state, fetching: false, error: action.payload }\r\n        case REQUEST_CHARACTERS_SUCCESS:\r\n            return { ...state, fetching: false, arrChars: action.payload.results, infoChars: action.payload.info, searchParamsCharacters: action.searchParams }\r\n        case REQUEST_LOCATIONS_SUCCESS:\r\n            return { ...state, fetching: false, arrLoc: action.payload.results, infoLoc: action.payload.info, searchParamsLocations: action.searchParams }\r\n        case REQUEST_EPISODES_SUCCESS:\r\n            return { ...state, fetching: false, arrEp: action.payload.results, infoEp: action.payload.info, searchParamsEpisodes: action.searchParams }\r\n        case FILTER_CHANGED:\r\n            return { ...state, typeOfSearch: action.payload, searchingPage: 1 }\r\n        case PAGE_CHANGED:\r\n            return { ...state, searchingPage: action.payload }\r\n        case UPDATE_NAME_BOX:\r\n            return { ...state, searchName: action.payload }\r\n        case UPDATE_TYPE_BOX:\r\n            return { ...state, searchType: action.payload }\r\n        case ERASE_TYPE_FIELD:\r\n            return { ...state, searchType: action.payload }\r\n        case ERASE_NAME_FIELD:\r\n            return { ...state, searchName: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\nimport searchReducer from './searchReducer';\r\nimport thunk from 'redux-thunk'; \r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    search : searchReducer      \r\n    \r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){ \r\n    let store = createStore( \r\n        rootReducer, \r\n        composeEnhancers( applyMiddleware(thunk))\r\n    ); \r\n    \r\n    \r\n    \r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport generateStore from './redux/store';\nimport client from './services/apollo';\nimport { ApolloProvider } from 'react-apollo';\n\nconst store = generateStore();\n\n\n\nconst WithStore = () => <Provider store={store}><App /></Provider>\nconst WithApollo = () => <ApolloProvider client={client}><WithStore /></ApolloProvider>\n\nReactDOM.render(\n  <React.StrictMode>\n    <WithApollo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"modal_Modal__38uBl\",\"content\":\"modal_content__17x_M\",\"aux_container\":\"modal_aux_container__xPMHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listButton\":\"home_listButton__2r8Gv\",\"searcher\":\"home_searcher__TmK63\",\"container\":\"home_container__3qXD4\",\"side_filter\":\"home_side_filter__2-4wF\",\"side_filterClosed\":\"home_side_filterClosed__3_dEX\",\"mainBlock\":\"home_mainBlock__Q2x7Y\",\"signature\":\"home_signature__1_Xwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"search_container__213h7\",\"cancel\":\"search_cancel__258Pb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listerContainer\":\"lister_listerContainer__187sN\",\"container\":\"lister_container__1NRUl\",\"containerError\":\"lister_containerError__1WwPp\",\"workplace\":\"lister_workplace__2CdVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"filter_container__11k7t\",\"containerSmall\":\"filter_containerSmall__2dueQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop_Backdrop__2Hdr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__3ff6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"auxcard_container__OfhlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"paginator_container__q5zEH\"};"],"sourceRoot":""}